services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres 
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9412:9411"
    networks:
      - postgres
      - microservice-network

  rabbitmq:
    image: rabbitmq:3-management 
    container_name: rabbitma 
    ports:
      - 5672:5672
      - 15672:15672
    networks:
    - postgres

  # config-server-ms:
  #   image: raihanrsd02/config-server-ms:latest 
  #   container_name: config-server-ms 
    
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - servicereg 
  #   networks:
  #     - microservice-network
  #     - postgres 
  #   environment:
  #     - SPRING PROFILES ACTIVE=docker
  #     - eureka.client.service-url.default-zone=http://servicereg:8761/eureka/
  #     - SPRING_APPLICATION_JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://servicereg:8761/eureka/"}}}}

  # servicereg:
  #   image: raihanrsd02/servicereg:latest 
  #   container_name: servicereg
  #   ports:
  #     - 8761:8761
  #   depends_on:
  #     - rabbitmq 
  #     - zipkin
  #     - postgres
  #     - pgadmin
  #   networks:
  #     - microservice-network
  #     - postgres 

  # companyms:
  #   image: raihanrsd02/companyms:latest 
  #   container_name: company
  #   ports:
  #     - 8081:8081
  #   depends_on:
  #     - servicereg 
  #   networks:
  #     - microservice-network
  #     - postgres
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - eureka.client.service-url.default-zone=http://servicereg:8761/eureka/
  #     - SPRING_APPLICATION_JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://servicereg:8761/eureka/"}}}}


  # jobs:
  #   image: raihanrsd02/jobs:latest 
  #   container_name: job
  #   ports:
  #     - 8082:8082
  #   depends_on:
  #     - servicereg 
  #     - config-server-ms
  #   networks:
  #     - microservice-network
  #     - postgres
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - eureka.client.service-url.default-zone=http://servicereg:8761/eureka/
  #     - SPRING_APPLICATION_JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://servicereg:8761/eureka/"}}}}

  # reviewms:
  #   image: raihanrsd02/reviewms:latest 
  #   container_name: review
  #   ports:
  #     - 8083:8083
  #   depends_on:
  #     - servicereg 
  #     - config-server-ms
  #   networks:
  #     - microservice-network
  #     - postgres
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - eureka.client.service-url.default-zone=http://servicereg:8761/eureka/
  #     - SPRING APPLICATION JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://servicereg:8761/eureka/"}}}}
  #     - BPL_JVM_HEAD_ROOM=0
  #     - BPL_JVM_THREAD_COUNT=100
  #     - JAVA_TOOL_OPTIONS=-Xmx256m -XX:MaxMetaspaceSize=128m -XX:MaxDirectMemorySize=10m

  # gateway-ms:
  #   image: raihanrsd02/gateway-ms:latest  
  #   ports:
  #     - 8084:8084
  #   depends_on:
  #     - servicereg 
  #     - config-server-ms
  #     - jobs
  #     - companyms
  #     - reviewms
  #   networks:
  #     - microservice-network
  #     - postgres
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - eureka.client.service-url.default-zone=http://servicereg:8761/eureka/
  #     - SPRING_APPLICATION_JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://servicereg:8761/eureka/"}}}}

  


networks:
  postgres:
    driver: bridge
  microservice-network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
    